[tool.poetry]
name = "fs.googledrivefs"
packages = [
    { include = "fs"}
]
version = "2.4.0"
description = "Pyfilesystem2 implementation for Google Drive"
authors = ["Rehan Khwaja <rehan@khwaja.name>"]
license = "MIT"
homepage = "https://github.com/rkhwaja/fs.googledrivefs"
keywords = ["filesystem", "Pyfilesystem2", "google"]
readme = "README.md"
classifiers = [
	"License :: OSI Approved :: MIT License",
	"Development Status :: 5 - Production/Stable",
	"Intended Audience :: Developers",
	"Programming Language :: Python :: 3.7",
	"Programming Language :: Python :: 3.8",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11"
]

[tool.poetry.dependencies]
python = ">=3.7"
fs = ">=2.4.13"
google-api-python-client = ">=1.7.10"
google-auth = ">=1.5.1"

[tool.poetry.dev-dependencies]
pytest = ">=7.2.0"
pytest-timeout = ">=1.3.3"
requests-oauthlib = ">=1.0"
pyperclip = ">=1.7"
pylint = ">=2.13" # need for python 3.11 support
pylint-quotes = ">=0.2.1"
pytest-cov = ">=2.10.1"
poethepoet = ">=0.16.4"
pyngrok = ">=5.0.6,<6"
pytest-localserver = ">=0.5.0"

[tool.poe.tasks]
lint = "pylint fs/googledrivefs/ tests/"

[tool.poe.tasks.test]
shell = """
pytest --cov=fs/googledrivefs --timeout=2700 || exit 1
coverage xml
"""

[tool.poetry.plugins] # Optional super table

[tool.poetry.plugins."fs.opener"]
"googledrive" = "fs.googledrivefs.opener:GoogleDriveFSOpener"

[tool.pylint.master]
load-plugins = [
	"pylint_quotes",
	"pylint.extensions.code_style",
	"pylint.extensions.confusing_elif",
	"pylint.extensions.bad_builtin",
	"pylint.extensions.bad_builtin",
	# "pylint.extensions.mccabe",
	"pylint.extensions.check_elif",
	"pylint.extensions.redefined_variable_type",
	"pylint.extensions.overlapping_exceptions",
	"pylint.extensions.empty_comment",
	"pylint.extensions.set_membership",
	# "pylint.extensions.while_used",
	]
enable="useless-suppression"

[tool.pylint.format]
indent-string = "\t"
max-line-length = "200"
string-quote = "single-avoid-escape"

[tool.pylint.messages_control]
# no-member to remove false positives with objects constructed via google's discovery protocol
disable = [
	"bad-continuation",
	"confusing-consecutive-elif",
	"consider-using-assignment-expr", # forces too many changes
	"fixme",
	"invalid-name",
	"len-as-condition",
	"line-too-long",
	"logging-format-interpolation",
	"logging-fstring-interpolation",
	"missing-docstring",
	"no-member",
	"no-name-in-module" # doesn't work for python 3.11
]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
