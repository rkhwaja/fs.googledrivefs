# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:

  secrets:
    runs-on: ubuntu-latest
    outputs:
      valid: ${{ steps.check.outputs.valid }}
    steps:
      - name: Check for access to secrets
        id: check
        env:
          GOOGLEDRIVEFS_TEST_CLIENT_ID: ${{ secrets.GOOGLEDRIVEFS_TEST_CLIENT_ID }}
          GOOGLEDRIVEFS_TEST_CLIENT_SECRET: ${{ secrets.GOOGLEDRIVEFS_TEST_CLIENT_SECRET }}
          GOOGLEDRIVEFS_TEST_TOKEN_READ_ONLY: ${{ secrets.GOOGLEDRIVEFS_TEST_TOKEN_READ_ONLY }}
        run: |
          valid=0
          if [ ! -z "$GOOGLEDRIVEFS_TEST_CLIENT_ID" ] && [ ! -z "$GOOGLEDRIVEFS_TEST_CLIENT_SECRET" ] && [ ! -z "$GOOGLEDRIVEFS_TEST_TOKEN_READ_ONLY" ]
          then
            echo "Secrets are available"
            valid=1
          else
            echo "Secrets are not available"
          fi

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false      
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python -
        poetry config virtualenvs.create false
        poetry install
    - name: Lint
      run: |
        poe lint
    - name: Tests
      env:
        GOOGLEDRIVEFS_TEST_CLIENT_ID: ${{ secrets.GOOGLEDRIVEFS_TEST_CLIENT_ID }}
        GOOGLEDRIVEFS_TEST_CLIENT_SECRET: ${{ secrets.GOOGLEDRIVEFS_TEST_CLIENT_SECRET }}
        GOOGLEDRIVEFS_TEST_TOKEN_READ_ONLY: ${{ secrets.GOOGLEDRIVEFS_TEST_TOKEN_READ_ONLY }}
      if: ${{needs.secrets.outputs.valid}} == 'true'
      run: |
        if python --version | grep -q 'Python 3.11' ; then
          poe test
        fi
    - name: Coverage
      uses: codecov/codecov-action@v2.1.0
